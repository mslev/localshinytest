[{"name":"app.R","content":"library(shiny)\n\n# Define UI for dataset viewer app ----\nui <- fluidPage(\n\n  # App title ----\n  titlePanel(\"Shiny Text\"),\n\n  # Sidebar layout with a input and output definitions ----\n  sidebarLayout(\n\n    # Sidebar panel for inputs ----\n    sidebarPanel(\n\n      # Input: Selector for choosing dataset ----\n      selectInput(inputId = \"dataset\",\n                  label = \"Choose a dataset:\",\n                  choices = c(\"rock\", \"pressure\", \"cars\")),\n\n      # Input: Numeric entry for number of obs to view ----\n      numericInput(inputId = \"obs\",\n                   label = \"Number of observations to view:\",\n                   value = 10)\n    ),\n\n    # Main panel for displaying outputs ----\n    mainPanel(\n\n      # Output: Verbatim text for data summary ----\n      verbatimTextOutput(\"summary\"),\n\n      # Output: HTML table with requested number of observations ----\n      tableOutput(\"view\")\n\n    )\n  )\n)\n\n# Define server logic to summarize and view selected dataset ----\nserver <- function(input, output) {\n\n  # Return the requested dataset ----\n  datasetInput <- reactive({\n    switch(input$dataset,\n           \"rock\" = rock,\n           \"pressure\" = pressure,\n           \"cars\" = cars)\n  })\n\n  # Generate a summary of the dataset ----\n  output$summary <- renderPrint({\n    dataset <- datasetInput()\n    summary(dataset)\n  })\n\n  # Show the first \"n\" observations ----\n  output$view <- renderTable({\n    head(datasetInput(), n = input$obs)\n  })\n\n}\n\n# Create Shiny app ----\nshinyApp(ui = ui, server = server)\n","type":"text"},{"name":"DESCRIPTION","content":"Title: Shiny Text\nAuthor: RStudio, Inc.\nAuthorUrl: http://www.rstudio.com/\nLicense: MIT\nDisplayMode: Showcase\nTags: getting-started\nType: Shiny\n\n","type":"text"},{"name":"Readme.md","content":"This example demonstrates output of raw text from R using the `renderPrint` function in `server` and the `verbatimTextOutput` function in `ui`. In this case, a textual summary of the data is shown using R's built-in `summary` function. \n","type":"text"}]
